/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CitiesListForm.java
 *
 * Created on 23-06-2011, 11:10:51 PM
 */
package org.timo.paginator;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author timoteo
 */
public class CitiesListForm extends javax.swing.JFrame implements ListProvider<City> {

    private static final Logger log = Logger.getAnonymousLogger();
    private final List<City> cities = createCities(27);
    private Paginator<City> paginator = new Paginator<City>( this,5);

    /** Creates new form CitiesListForm */
    public CitiesListForm() {
        initComponents();
        paginator.init();
        refreshTable();

        this.pageSizeCombo.addItem("5");
        this.pageSizeCombo.addItem("10");
        this.pageSizeCombo.addItem("15");
        this.pageSizeCombo.addItem("20");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        cityTable = new javax.swing.JTable();
        goFirstBtn = new javax.swing.JButton();
        goPrevBtn = new javax.swing.JButton();
        goNextBtn = new javax.swing.JButton();
        goLastBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        currentPageTxt = new javax.swing.JLabel();
        pageSizeCombo = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane1.setViewportView(cityTable);

        goFirstBtn.setText("<<");
        goFirstBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goFirstBtnActionPerformed(evt);
            }
        });

        goPrevBtn.setText("<");
        goPrevBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goPrevBtnActionPerformed(evt);
            }
        });

        goNextBtn.setText(">");
        goNextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goNextBtnActionPerformed(evt);
            }
        });

        goLastBtn.setText(">>");
        goLastBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goLastBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Page:");

        currentPageTxt.setText("jLabel2");

        pageSizeCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pageSizeComboItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(goFirstBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(goPrevBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(goNextBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(goLastBtn)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(currentPageTxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pageSizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(currentPageTxt)
                        .addComponent(pageSizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(goFirstBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(goPrevBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(goNextBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(goLastBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void goFirstBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goFirstBtnActionPerformed
        paginator.goFirstPage();
        refreshTable();
    }//GEN-LAST:event_goFirstBtnActionPerformed

    private void goPrevBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goPrevBtnActionPerformed
        paginator.goPreviousPage();
        refreshTable();
    }//GEN-LAST:event_goPrevBtnActionPerformed

    private void goNextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goNextBtnActionPerformed
        paginator.goNextPage();
        refreshTable();
    }//GEN-LAST:event_goNextBtnActionPerformed

    private void goLastBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goLastBtnActionPerformed
        paginator.goLastPage();
        refreshTable();
    }//GEN-LAST:event_goLastBtnActionPerformed

    private void pageSizeComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pageSizeComboItemStateChanged
        paginator.setPageSize(Integer.parseInt(pageSizeCombo.getSelectedItem().toString()));
        paginator.refresh();
        refreshTable();
    }//GEN-LAST:event_pageSizeComboItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new CitiesListForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable cityTable;
    private javax.swing.JLabel currentPageTxt;
    private javax.swing.JButton goFirstBtn;
    private javax.swing.JButton goLastBtn;
    private javax.swing.JButton goNextBtn;
    private javax.swing.JButton goPrevBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox pageSizeCombo;
    // End of variables declaration//GEN-END:variables

    private List<City> createCities(int top) {
        List<City> list = new ArrayList<City>();
        Random random = new Random();
        for (int i = 0; i < top; i++) {
            list.add(new City(i, "city-" + i, random.nextInt()));
        }
        return list;
    }

    private void refreshTable() {
        log.info("Refreshing table");
        DefaultTableModel tableModel = (DefaultTableModel) cityTable.getModel();
        tableModel.getDataVector().clear();

        for (City city : paginator.getList()) {
            tableModel.addRow(new Object[]{city.getCode(), city.getName(), city.getPopulation()});
        }
        this.goFirstBtn.setEnabled(paginator.getCurrentPage() != 1);
        this.goPrevBtn.setEnabled(paginator.hasPreviousPage());
        this.goNextBtn.setEnabled(paginator.hasNextPage());
        this.goLastBtn.setEnabled(paginator.hasNextPage());
        this.currentPageTxt.setText(paginator.getCurrentPage()+"");
        log.info("Last page : "+paginator.getLastPage());
    }

    public List<City> provideList(RangeProvider rangeProvider) {
        Range range = rangeProvider.getRange(cities.size());
        log.info("Providing list : "+range);
        return cities.subList(range.getFromIndex(), range.getToIndex());
    }
}
