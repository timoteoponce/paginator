{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","body":"### Overview\r\nAfter searching for a generic (without third-party dependencies) pagination component for several hours, I decided to start my own from scratch. After a few days I have a workable version of it:\r\n\r\n```java\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.logging.Logger;\r\n\r\nimport com.github.timoteoponce.paginator.ListProvider;\r\nimport com.github.timoteoponce.paginator.Paginator;\r\nimport com.github.timoteoponce.paginator.Segment;\r\nimport com.github.timoteoponce.paginator.SegmentProvider;\r\n\r\n/**\r\n * \r\n * @author Timoteo Ponce\r\n */\r\npublic class TestPaginator {\r\n    private static final Logger log = Logger.getAnonymousLogger();\r\n\r\n    public static void main(final String[] args) {\r\n        Paginator<String> paginator = new Paginator<String>(new MyListProvider(), 3);\r\n        // \"Akira\", \"Edward\", \"Alphonse\"\r\n        log.info(\"Page 1: \" + paginator.getList());\r\n        paginator.goNextPage();\r\n        // \"Mustang\", \"Hawkeye\", \"Lusty\"\r\n        log.info(\"Page 2: \" + paginator.getList());\r\n    }\r\n\r\n    private static class MyListProvider implements ListProvider<String> {\r\n\r\n        List<String> sourceList = Arrays.asList(\"Akira\", \"Edward\", \"Alphonse\", \"Mustang\", \"Hawkeye\", \"Lusty\", \"Gluton\", \"Envy\", \"Lust\", \"Wrath\");\r\n\r\n        /*\r\n         * (non-Javadoc)\r\n         * \r\n         * @see org.timo.paginator.ListProvider#provideList(org.timo.paginator.SegmentProvider)\r\n         */\r\n        @Override\r\n        public List<String> provideList(final SegmentProvider segmentProvider) {\r\n            // we need the total source list size for calculations and checkings\r\n            Segment segment = segmentProvider.getSegment(sourceList.size());\r\n            return sourceList.subList(segment.getFromIndex(), segment.getToIndex());\r\n        }\r\n\r\n    }\r\n}\r\n```\r\n\r\nAs you can see, it's very simple to use and you can extend it as much as you want to. The core of the component is the pages-size-limits calculation defined in the class PaginationData.\r\n\r\nMaven setup:\r\n```\r\n<dependency>\r\n\t<groupId>com.github.timoteoponce</groupId>\r\n\t<artifactId>paginator</artifactId>\r\n\t<version>0.0.5</version>\r\n</dependency>\r\n```\r\n\r\nExamples: \r\n * https://github.com/timoteoponce/paginator/tree/master/examples","name":"Paginator","tagline":"Generic stateless paginator component for Java"}